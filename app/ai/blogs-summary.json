{"/blogs/farmfe-plugins-ci":"The blog introduces farm plugins CI for JavaScript and Rust plugins. For Rust plugins, it builds for multiple platforms and deploys to npm registry. For JavaScript plugins, similar steps are followed. Both use pnpm --filter '{xx}[HEAD~1]' to build only changed plugins and contains to determine if CI should run. The summary emphasizes these two points for reducing build time and controlling CI execution.","/rusts/start":"**Blog Summary**\n\nThe blog post is about getting started with the Rust programming language. The author, Madinah, provides a simple example of a \"hello, world\" program in Rust.\n\nIn this example, the `main` function is defined, which contains the `println!` macro that prints \"Hello, world!\" to the console.\n\nThis post is likely intended for beginners who want to learn how to write their first Rust program. The simplicity of the code makes it accessible to those new to programming languages.\n\nThe author's goal appears to be introducing readers to the basics of Rust and encouraging them to try out the language themselves. Overall, this post provides a concise introduction to getting started with Rust.","/rusts/async":"博客介绍了 Rust 异步编程。解释了 trait 的概念，阐述了进程 — 线程 — 协程的异步模型。讲解了 async/await 的用法及 async lifetime。详细说明了 Future trait 及其 Poll 枚举类型。还涉及了异步调试工具如 tokio-tracing、tokio-console、await-tree 以及 openharmony 的 yinglong 框架及其特定需求。最后给出了一篇关于 reactor 模式的文章链接。","/rusts/algorithm":"The provided Rust algorithm solves"}